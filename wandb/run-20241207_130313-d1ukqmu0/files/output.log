/Users/peterbanyas/Desktop/ECE 661/Project 661/ece661-GAN-project/analysis/inferencetime.py:28: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  PTH_pix2pix_UNet = torch.load("analysis/models/generator_epoch_130.pth", map_location=torch.device('cpu'))
/Users/peterbanyas/Desktop/ECE 661/Project 661/ece661-GAN-project/analysis/inferencetime.py:29: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  PTH_cycle_UNet = torch.load("analysis/models/gen_X_to_Y_epoch_200.pth", map_location=torch.device('cpu'))
Traceback (most recent call last):
  File "/Users/peterbanyas/Desktop/ECE 661/Project 661/ece661-GAN-project/analysis/inferencetime.py", line 123, in <module>
    plt.show()
  File "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/pyplot.py", line 527, in show
    return _get_backend_mod().show(*args, **kwargs)
  File "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/backend_bases.py", line 3448, in show
    cls.mainloop()
  File "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/backends/backend_macosx.py", line 182, in start_main_loop
    with _maybe_allow_interrupt():
  File "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/contextlib.py", line 142, in __exit__
    next(self.gen)
  File "/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/matplotlib/backends/backend_macosx.py", line 229, in _maybe_allow_interrupt
    old_sigint_handler(*handler_args)
KeyboardInterrupt
